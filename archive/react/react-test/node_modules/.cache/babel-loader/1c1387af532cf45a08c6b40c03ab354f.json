{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\webProjects\\\\reactTest\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Body, Body2 } from \"./components/Body\";\nimport { Header } from \"./components/Header\";\nimport { Counter } from \"./components/Counter\";\nimport { ImageSlider } from \"./components/ImageSlider\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isVisible: true\n    };\n  }\n\n  render() {\n    let slider = this.state.isVisible ? React.createElement(ImageSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n\n    if (!this.state.isVisible) {\n      slider = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"display nothing\");\n    }\n\n    const buttonText = this.state.isVisible ? \"Hide\" : \"Show\";\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          isVisible: !this.state.isVisible\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, buttonText), slider);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Repos\\webProjects\\reactTest\\src\\App.js"],"names":["React","Body","Body2","Header","Counter","ImageSlider","App","Component","state","isVisible","render","slider","buttonText","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE;AADL,KADwB;AAAA;;AAKhCC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,KAAKH,KAAL,CAAWC,SAAX,GACX,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,GAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF;;AAQA,QAAI,CAAC,KAAKD,KAAL,CAAWC,SAAhB,EAA2B;AACzBE,MAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAT;AACD;;AAED,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,MAAnD;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,SAAd;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGG,UALH,CADF,EAQGD,MARH,CADF;AA0BD;;AA9C+B;;AAiDlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Body, Body2 } from \"./components/Body\";\nimport { Header } from \"./components/Header\";\nimport { Counter } from \"./components/Counter\";\nimport { ImageSlider } from \"./components/ImageSlider\";\n\nclass App extends React.Component {\n  state = {\n    isVisible: true\n  };\n\n  render() {\n    let slider = this.state.isVisible ? (\n      <ImageSlider />\n    ) : (\n      <div>\n        <Counter />\n      </div>\n    );\n\n    if (!this.state.isVisible) {\n      slider = <div>display nothing</div>;\n    }\n\n    const buttonText = this.state.isVisible ? \"Hide\" : \"Show\";\n\n    return (\n      <div className=\"App\">\n        <button\n          onClick={() => {\n            this.setState({ isVisible: !this.state.isVisible });\n          }}\n        >\n          {buttonText}\n        </button>\n        {slider}\n\n        {/* <Header\n          title=\"こんにちは世界！\"\n          number={5}\n          myFunc={(a, b) => a + b}\n          myArr={[100, 200, 300]}\n          myObj={{\n            a: 13,\n            b: \"To jest b\"\n          }}\n        />\n        <Counter />\n        <Body2 />\n        <Body myFunc={(a, b) => a + b} text=\"Learn NOW!\" text2=\"なんとかかん\" /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}