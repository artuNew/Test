{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\webProjects\\\\reactTest\\\\src\\\\components\\\\FetchRandomUser.js\";\nimport React from \"react\";\nexport default class FetchRandomUser extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      people: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.randomuser.me/?results=5\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      people: data.results,\n      loading: false\n    });\n    console.log(data.results);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.loading || !this.state.people.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.state.people.map(person => React.createElement(React.Fragment, {\n      key: person.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, person.name.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, person.name.first), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, person.name.last), React.createElement(\"img\", {\n      src: person.picture.large,\n      alt: \"Pic missing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["D:\\Repos\\webProjects\\reactTest\\src\\components\\FetchRandomUser.js"],"names":["React","FetchRandomUser","Component","state","loading","people","componentDidMount","url","response","fetch","data","json","setState","results","console","log","render","length","map","person","name","title","first","last","picture","large"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC3DC,KAD2D,GACnD;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmD;AAAA;;AAM3D,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GAAG,sCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEK,IAAI,CAACG,OAAf;AAAwBT,MAAAA,OAAO,EAAE;AAAjC,KAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,OAAjB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWC,OAAX,IAAsB,CAAC,KAAKD,KAAL,CAAWE,MAAX,CAAkBY,MAAzC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWE,MAAX,CAAkBa,GAAlB,CAAsBC,MAAM,IAC3B,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,MAAM,CAACC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAM,CAACC,IAAP,CAAYC,KAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,MAAM,CAACC,IAAP,CAAYE,KAAlB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,MAAM,CAACC,IAAP,CAAYG,IAAlB,CAHF,EAIE;AAAK,MAAA,GAAG,EAAEJ,MAAM,CAACK,OAAP,CAAeC,KAAzB;AAAgC,MAAA,GAAG,EAAE,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADD,CADH,CAJJ,CADF;AAkBD;;AAjC0D","sourcesContent":["import React from \"react\";\r\n\r\nexport default class FetchRandomUser extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    people: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://api.randomuser.me/?results=5\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ people: data.results, loading: false });\r\n    console.log(data.results);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading || !this.state.people.length ? (\r\n          <div>loading...</div>\r\n        ) : (\r\n          <div>\r\n            {this.state.people.map(person => (\r\n              <React.Fragment key={person.name}>\r\n                <div>{person.name.title}</div>\r\n                <div>{person.name.first}</div>\r\n                <div>{person.name.last}</div>\r\n                <img src={person.picture.large} alt={\"Pic missing\"} />\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}